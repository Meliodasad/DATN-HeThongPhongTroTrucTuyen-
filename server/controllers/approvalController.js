const Approval = require('../models/RoomApproval');

// L·∫•y danh s√°ch approvals
exports.getRoomApprovals = async (req, res) => {
  try {
    console.log('üîç B·∫Øt ƒë·∫ßu l·∫•y danh s√°ch approvals...');
    
    const approvals = await Approval.find().populate('requestedBy', 'name email');
    // console.log(`üì¶ S·ªë l∆∞·ª£ng t√¨m th·∫•y: ${approvals.length}`);
    // console.log('üìÑ D·ªØ li·ªáu:', approvals);

    res.status(200).json({
      success: true,
      count: approvals.length,
      data: approvals
    });
  } catch (err) {
    // console.error('‚ùå L·ªói khi l·∫•y approvals:', err.message);
    res.status(500).json({ success: false, error: 'Server Error' });
  }
};

// L·∫•y chi ti·∫øt 1 approval theo approvalId
exports.getSingleApproval = async (req, res) => {
  try {
    // console.log(`üîç T√¨m approvalId: ${req.params.id}`);
    
    const approval = await Approval.findOne({ approvalId: req.params.id })
      .populate('requestedBy', 'name email');

    if (!approval) {
      console.warn('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y approval');
      return res.status(404).json({ success: false, error: 'Approval not found' });
    }

    // console.log('üìÑ D·ªØ li·ªáu t√¨m th·∫•y:', approval);

    res.status(200).json({ success: true, data: approval });
  } catch (err) {
    // console.error('‚ùå L·ªói khi l·∫•y approval:', err.message);
    res.status(500).json({ success: false, error: 'Server Error' });
  }
};

// C·∫≠p nh·∫≠t tr·∫°ng th√°i approval
exports.updateApprovalStatus = async (req, res) => {
  try {
    // console.log(`üîÑ C·∫≠p nh·∫≠t approvalId: ${req.params.id}, Tr·∫°ng th√°i m·ªõi: ${req.body.status}`);

    const approval = await Approval.findOneAndUpdate(
      { approvalId: req.params.id },
      { status: req.body.status },
      { new: true, runValidators: true }
    );

    if (!approval) {
      // console.warn('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y approval ƒë·ªÉ c·∫≠p nh·∫≠t');
      return res.status(404).json({ success: false, error: 'Approval not found' });
    }

    // console.log('‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng:', approval);

    res.status(200).json({ success: true, data: approval });
  } catch (err) {
    // console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t approval:', err.message);
    res.status(500).json({ success: false, error: 'Server Error' });
  }
};
